apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: dev
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: red
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: true
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse(vars.warehouse)).ID }}
            path: ./src
          - branch: ${{ vars.env}}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at ./src/env/dev
      # in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ghcr.io/akuity/guestbook
            tag: ${{ imageFrom(vars.image, warehouse(vars.warehouse)).Tag }}
      # Build the Kustomize configuration in the ./src directory using the env/dev
      # overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-dev
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: staging
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: amber
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - dev
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse(vars.warehouse))).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/staging in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ghcr.io/akuity/guestbook
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/staging overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-staging
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: ab-test-a
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: yellow
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - staging
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse("guestbook")).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/ab-test-a in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ${{ vars.image }}
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/ab-test-a overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
            - name: guestbook-ab-test-a
              sources:
              - repoURL: ${{ vars.repoURL }}
                desiredRevision: ${{ outputs['commit'].commit }}
  verification:
    analysisTemplates:
    - name: cat-fact
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: ab-test-b
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: green
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - staging
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse("guestbook")).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/ab-test-b in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ${{ vars.image }}
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/ab-test-b overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-ab-test-b
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
  verification:
    analysisTemplates:
    - name: cat-fact-fail
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: blue
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - ab-test-a
      - ab-test-b
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod-west
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: violet
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - prod
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse("guestbook")).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/prod-west in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ${{ vars.image }}
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/prod-west overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-prod-west
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod-central
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: violet
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - prod
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse("guestbook")).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/prod-central in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ${{ vars.image }}
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/prod-central overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-prod-central
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod-east
  namespace: kargo-advanced
  annotations:
    kargo.akuity.io/color: violet
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: guestbook
    sources:
      direct: false
      stages:
      - prod
  promotionTemplate:
    spec:
      vars:
      - name: repoURL
        value: https://github.com/akuity/kargo-advanced.git
      - name: env
        value: env/${{ ctx.stage }}
      - name: image
        value: ghcr.io/akuity/guestbook
      - name: warehouse
        value: guestbook
      steps:
      # Clone the Git repository that contains the Kustomize configuration
      # to the ./src directory, and the environment configuration to ./out.
      - uses: git-clone
        config:
          repoURL: ${{ vars.repoURL }}
          checkout:
          - commit: ${{ commitFrom(vars.repoURL, warehouse("guestbook")).ID }}
            path: ./src
          - branch: ${{ vars.env }}
            path: ./out
            # Create the branch if it does not exist.
            create: true
      # Following a "rendered branch" pattern, we delete all files in the
      # ./out directory to ensure that we only have the files that are
      # rendered from the Kustomize configuration in the ./src directory
      # of the repository after being rendered.
      - uses: git-clear
        config:
          path: ./out
      # Update the image in the Kustomize configuration located at
      # ./src/env/prod-east in the repository.
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/${{ vars.env }}
          images:
          - image: ${{ vars.image }}
            tag: vars.warehouse
      # Build the Kustomize configuration in the ./src directory using the
      # env/prod-east overlay to the ./out directory.
      - uses: kustomize-build
        config:
          path: ./src/${{ vars.env }}
          outPath: ./out
      # Commit the changes to the Git repository.
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: |
            Update guestbook image in ${{ vars.env }}

            ${{ outputs['update-image'].commitMessage}}
      # Push the changes to the Git repository.
      - uses: git-push
        config:
          path: ./out
      # Request a sync of the ArgoCD Application to apply the changes from the
      # commit.
      - uses: argocd-update
        config:
          apps:
          - name: guestbook-prod-east
            sources:
            - repoURL: ${{ vars.repoURL }}
              desiredRevision: ${{ outputs['commit'].commit }}
